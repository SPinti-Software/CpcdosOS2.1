/*	
	======================================
	==     CPinti ---> CPinti Checker   ==
	======================================
	
	Developpe entierement par Sebastien FAVIER

	Description
		Module permettant de checker les threads et processus
		 dont l'arret de ces derniers ont ete demandes et l'attente
		 est depassee. Ce module va forcer la fermeture des thread & Processus
		 "mort".
	
	Creation 
		19/10/2016


	Mise a jour
		19/10/2018
		
	16-10-2018	: Adaption 2.1 beta 1.1
	07-12-2017	: AMELIORATION du code en suivant une procedure sticte de GCCk
	16/01/2017	: Ajout CPinti checker + ajustements
	
*/
#include <memory>

#include "debug.h"
#include "cpinti.h" // inclut taches.h

#include "func_cpi.h"

#include "threads.h"
#include "taches.h"

#include "socket.h"
#include "ping.h"
#include "serveur.h"
#include "client.h" 
 
#include "io.h"

#include "heap.h"
 

int __CpintiCore_CpcdosOSx__::cpinti_ckecker(unsigned int ID_KERNEL)
	{
		// Cette methode fonctionne comme un garbage collector mais pour thread/processus
		//  a executer minimum 1 fois par secondes
		//  permet de checker de la plus part des modules et appliquer d'eventuels
		//  corrections du systeme comme :
		//  * S'il y a un processus/thread qui est en attente d'arret
		//    si elle n'a pas ete ferme par un parent mais par lui meme.
		//  * 
		
		// Celui qui donne le tempo de ce qui a a faire
		cpinti::__CpintiCore_CpcdosOSx__::cpinti_core_checker::CHECKER_CLOCK++;
		
		// Si le compteur arrive a la limite, on reinitialise le compteur
		if(cpinti::__CpintiCore_CpcdosOSx__::cpinti_core_checker::CHECKER_CLOCK >= _CHK_TEMPO_MAX)
		{
			cpinti::__CpintiCore_CpcdosOSx__::cpinti_core_checker::CHECKER_CLOCK 	= 0;
			cpinti::__CpintiCore_CpcdosOSx__::cpinti_core_checker::ETAPE			= 0;
			cpinti::__CpintiCore_CpcdosOSx__::cpinti_core_checker::Index			= 0;
		}
		else
		{
			/* PROCESSUS */
			if(cpinti::__CpintiCore_CpcdosOSx__::cpinti_core_checker::CHECKER_CLOCK == 5)
				cpinti::__CpintiCore_CpcdosOSx__::cpinti_core_checker::ETAPE = _CPINTI_CHK_PROC;
			
			/* THREADS */
			else if(cpinti::__CpintiCore_CpcdosOSx__::cpinti_core_checker::CHECKER_CLOCK == 10)
				cpinti::__CpintiCore_CpcdosOSx__::cpinti_core_checker::ETAPE = _CPINTI_CHK_THREAD;
			
			else
				cpinti::__CpintiCore_CpcdosOSx__::cpinti_core_checker::ETAPE = 0;

		}
		
		/* PROCESSUS */
		if(cpinti::__CpintiCore_CpcdosOSx__::cpinti_core_checker::ETAPE == _CPINTI_CHK_PROC)
		{
			return 0;
		}
		
		/* THREAD */
		else if(cpinti::__CpintiCore_CpcdosOSx__::cpinti_core_checker::ETAPE == _CPINTI_CHK_THREAD)
		{
			// if(CPintiCore_Gestionnaire_Taches->Thread_est_arrete(ID_KERNEL, true) != 0)
				// return _CHK_ERR_THREAD_C;
		}
			
		
		
		return 0; // Aucune anomalies ;)
		
		cpinti_Appeler_Scheduler_CPintiCore(0); // Fictif pour enlever un warning
	}