/*	
	======================================
	==       CPinti ---> wrapper CPU    ==
	======================================
	
	Developpe entierement par Sebastien FAVIER

	Description
		Module permettant l'acces aux fonctionnalites de satitiques
		 du CPU
	
	Creation 
		19/10/2016


	Mise a jour
		19/10/2018
		
	16-10-2018	: Adaption 2.1 beta 1.1
	07-12-2017	: AMELIORATION du code en suivant une procedure sticte de GCC
	
*/
#include <memory>

#include "debug.h"
#include "cpinti.h" // inclut taches.h

#include "func_cpi.h"

#include "threads.h"
#include "taches.h"

#include "socket.h"
#include "ping.h"
#include "serveur.h"
#include "client.h" 
 
#include "io.h"

#include "heap.h"


void __CpintiCore_CpcdosOSx__::cpinti_update_cycle_cpu()
	{
		// Cette fonction permet de retourner le nombre de cycles de CPU
		NP_cpinti_gestionnaire_tache::Gestionnaire_des_taches::Update_cycle_CPU();
	}
	
	unsigned int __CpintiCore_CpcdosOSx__::cpinti_get_cycle_cpu()
	{
		// Cette fonction permet de retourner le nombre de cycles de CPU
		return NP_cpinti_gestionnaire_tache::Gestionnaire_des_taches::get_Nombre_cycle_CPU();
	}
	
	unsigned int __CpintiCore_CpcdosOSx__::cpinti_get_max_cycle_cpu()
	{
		// Cette fonction permet de retourner le nombre de cycles de CPU
		return NP_cpinti_gestionnaire_tache::Gestionnaire_des_taches::get_NB_MAX_Cycle_CPU();
	}
	
	int __CpintiCore_CpcdosOSx__::cpinti_get_pourcent_cpu()
	{
		// Cette fonction permet de retourner le nombre de cycles de CPU
		return NP_cpinti_gestionnaire_tache::Gestionnaire_des_taches::get_pourcent_CPU();
	}
	
	void __CpintiCore_CpcdosOSx__::cpinti_evaluation_cycle_cpu()
	{
		// Cette fonction permet de de faire une evaluation du CPU

		cpinti_dbg::CPINTI_DEBUG(" * Test a blanc du CPU(1)... ", 
					 " * CPU(1) Blank test... ",
						"__CpintiCore_CpcdosOSx__", "cpinti_evaluation_cycle_cpu()", Ligne_reste, Alerte_surbrille, Date_avec, Ligne_r_normal);	
		
		cpinti::cpinti_Sleep(500);
		
		unsigned int bk_Temps_DEPART = time(0);
		
		while(difftime(time(0), bk_Temps_DEPART) < 2)
		{
			doevents(0);
			
			NP_cpinti_gestionnaire_tache::Gestionnaire_des_taches::set_NB_MAX_Cycle_CPU(NP_cpinti_gestionnaire_tache::Gestionnaire_des_taches::get_NB_MAX_Cycle_CPU()+1);
		}
	
		
		std::string Cycle_STR = cpinti::Func_Cpinti::to_string(NP_cpinti_gestionnaire_tache::Gestionnaire_des_taches::get_NB_MAX_Cycle_CPU());
		cpinti_dbg::CPINTI_DEBUG("[OK] yielding --> " + Cycle_STR + " cycles/s", 
								"[OK] yielding --> " + Cycle_STR + " cycles/s",
								"", "", Ligne_saute, Alerte_validation, Date_sans, Ligne_r_normal);	
	}